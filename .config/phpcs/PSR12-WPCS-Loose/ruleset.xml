<?xml version="1.0" ?>
<ruleset name="PSR12-WPCS-Loose">
    <rule ref="PSR12" />
    <description>Loosely based on PSR-12 + WPCS.</description>
    <autoload>/users/jaswrks/.libs/wpcs/vendor/autoload.php</autoload>

    <rule ref="Generic.Debug.ESLint">
        <properties>
            <property name="configFile" value="/users/jaswrks/.eslintrc.json" />
        </properties>
    </rule>
    <rule ref="Generic.PHP.NoSilencedErrors">
        <properties>
            <property name="error" value="false" />
        </properties>
    </rule>
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array" extend="true">
                <element key="print" value="echo" />
                <element key="create_function" value="null" />
            </property>
        </properties>
    </rule>

    <!-- WordPress-style paren-spacing. -->

    <!-- Covers rule: Always put spaces after commas, and on both sides of logical, comparison, string and assignment operators. -->
	<rule ref="Squiz.Strings.ConcatenationSpacing">
		<properties>
			<property name="spacing" value="1" />
			<property name="ignoreNewlines" value="true" />
		</properties>
	</rule>

	<!-- Covers rule: Put spaces on both sides of the opening and closing
         parenthesis of if, elseif, foreach, for, and switch blocks. -->

	<!-- Covers rule: Define a function like so: function my_function( $param1 = 'foo', $param2 = 'bar' ) { -->
	<rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie">
		<properties>
			<property name="checkClosures" value="true" />
		</properties>
	</rule>
	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
		<properties>
			<property name="equalsSpacing" value="1" />
			<property name="requiredSpacesAfterOpen" value="1" />
			<property name="requiredSpacesBeforeClose" value="1" />
		</properties>
	</rule>
	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose">
		<severity>0</severity>
	</rule>

	<!-- Covers rule: Call a function, like so: my_function( $param1, func_param( $param2 ) ); -->
	<rule ref="PEAR.Functions.FunctionCallSignature">
		<properties>
			<property name="requiredSpacesAfterOpen" value="1" />
			<property name="requiredSpacesBeforeClose" value="1" />
		</properties>
	</rule>

	<rule ref="Generic.Functions.FunctionCallArgumentSpacing" />
	<rule ref="Generic.Formatting.SpaceAfterCast" />
	<rule ref="Squiz.WhiteSpace.CastSpacing" />

	<!-- Covers rule: ... array items, only include a space around the index if it is a variable. -->

	<!-- Covers rule: Unless otherwise specified, parentheses should have spaces inside of them. -->
	<rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing">
		<properties>
			<property name="spacing" value="1" />
			<property name="ignoreNewlines" value="true" />
		</properties>
	</rule>
</ruleset>
